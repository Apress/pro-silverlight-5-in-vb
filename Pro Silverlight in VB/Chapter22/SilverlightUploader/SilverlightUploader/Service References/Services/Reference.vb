'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


'
'This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.60818.0
'
Namespace Services
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="", ConfigurationName:="Services.FileService")>  _
    Public Interface FileService
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:FileService/GetFileList", ReplyAction:="urn:FileService/GetFileListResponse")>  _
        Function BeginGetFileList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetFileList(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String)
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:FileService/DownloadFile", ReplyAction:="urn:FileService/DownloadFileResponse")>  _
        Function BeginDownloadFile(ByVal fileName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDownloadFile(ByVal result As System.IAsyncResult) As Byte()
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:FileService/UploadFile", ReplyAction:="urn:FileService/UploadFileResponse")>  _
        Function BeginUploadFile(ByVal fileName As String, ByVal data() As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Sub EndUploadFile(ByVal result As System.IAsyncResult)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface FileServiceChannel
        Inherits Services.FileService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetFileListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As System.Collections.ObjectModel.ObservableCollection(Of String)
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Collections.ObjectModel.ObservableCollection(Of String))
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DownloadFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Byte()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class FileServiceClient
        Inherits System.ServiceModel.ClientBase(Of Services.FileService)
        Implements Services.FileService
        
        Private onBeginGetFileListDelegate As BeginOperationDelegate
        
        Private onEndGetFileListDelegate As EndOperationDelegate
        
        Private onGetFileListCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDownloadFileDelegate As BeginOperationDelegate
        
        Private onEndDownloadFileDelegate As EndOperationDelegate
        
        Private onDownloadFileCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginUploadFileDelegate As BeginOperationDelegate
        
        Private onEndUploadFileDelegate As EndOperationDelegate
        
        Private onUploadFileCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginOpenDelegate As BeginOperationDelegate
        
        Private onEndOpenDelegate As EndOperationDelegate
        
        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginCloseDelegate As BeginOperationDelegate
        
        Private onEndCloseDelegate As EndOperationDelegate
        
        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC"& _ 
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property
        
        Public Event GetFileListCompleted As System.EventHandler(Of GetFileListCompletedEventArgs)
        
        Public Event DownloadFileCompleted As System.EventHandler(Of DownloadFileCompletedEventArgs)
        
        Public Event UploadFileCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Services_FileService_BeginGetFileList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements Services.FileService.BeginGetFileList
            Return MyBase.Channel.BeginGetFileList(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Services_FileService_EndGetFileList(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String) Implements Services.FileService.EndGetFileList
            Return MyBase.Channel.EndGetFileList(result)
        End Function
        
        Private Function OnBeginGetFileList(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,Services.FileService).BeginGetFileList(callback, asyncState)
        End Function
        
        Private Function OnEndGetFileList(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As System.Collections.ObjectModel.ObservableCollection(Of String) = CType(Me,Services.FileService).EndGetFileList(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetFileListCompleted(ByVal state As Object)
            If (Not (Me.GetFileListCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetFileListCompleted(Me, New GetFileListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetFileListAsync()
            Me.GetFileListAsync(Nothing)
        End Sub
        
        Public Overloads Sub GetFileListAsync(ByVal userState As Object)
            If (Me.onBeginGetFileListDelegate Is Nothing) Then
                Me.onBeginGetFileListDelegate = AddressOf Me.OnBeginGetFileList
            End If
            If (Me.onEndGetFileListDelegate Is Nothing) Then
                Me.onEndGetFileListDelegate = AddressOf Me.OnEndGetFileList
            End If
            If (Me.onGetFileListCompletedDelegate Is Nothing) Then
                Me.onGetFileListCompletedDelegate = AddressOf Me.OnGetFileListCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetFileListDelegate, Nothing, Me.onEndGetFileListDelegate, Me.onGetFileListCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Services_FileService_BeginDownloadFile(ByVal fileName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements Services.FileService.BeginDownloadFile
            Return MyBase.Channel.BeginDownloadFile(fileName, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Services_FileService_EndDownloadFile(ByVal result As System.IAsyncResult) As Byte() Implements Services.FileService.EndDownloadFile
            Return MyBase.Channel.EndDownloadFile(result)
        End Function
        
        Private Function OnBeginDownloadFile(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim fileName As String = CType(inValues(0),String)
            Return CType(Me,Services.FileService).BeginDownloadFile(fileName, callback, asyncState)
        End Function
        
        Private Function OnEndDownloadFile(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As Byte = CType(Me,Services.FileService).EndDownloadFile(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDownloadFileCompleted(ByVal state As Object)
            If (Not (Me.DownloadFileCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DownloadFileCompleted(Me, New DownloadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DownloadFileAsync(ByVal fileName As String)
            Me.DownloadFileAsync(fileName, Nothing)
        End Sub
        
        Public Overloads Sub DownloadFileAsync(ByVal fileName As String, ByVal userState As Object)
            If (Me.onBeginDownloadFileDelegate Is Nothing) Then
                Me.onBeginDownloadFileDelegate = AddressOf Me.OnBeginDownloadFile
            End If
            If (Me.onEndDownloadFileDelegate Is Nothing) Then
                Me.onEndDownloadFileDelegate = AddressOf Me.OnEndDownloadFile
            End If
            If (Me.onDownloadFileCompletedDelegate Is Nothing) Then
                Me.onDownloadFileCompletedDelegate = AddressOf Me.OnDownloadFileCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDownloadFileDelegate, New Object() {fileName}, Me.onEndDownloadFileDelegate, Me.onDownloadFileCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Services_FileService_BeginUploadFile(ByVal fileName As String, ByVal data() As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements Services.FileService.BeginUploadFile
            Return MyBase.Channel.BeginUploadFile(fileName, data, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Sub Services_FileService_EndUploadFile(ByVal result As System.IAsyncResult) Implements Services.FileService.EndUploadFile
            MyBase.Channel.EndUploadFile(result)
        End Sub
        
        Private Function OnBeginUploadFile(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim fileName As String = CType(inValues(0),String)
            Dim data() As Byte = CType(inValues(1),Byte())
            Return CType(Me,Services.FileService).BeginUploadFile(fileName, data, callback, asyncState)
        End Function
        
        Private Function OnEndUploadFile(ByVal result As System.IAsyncResult) As Object()
            CType(Me,Services.FileService).EndUploadFile(result)
            Return Nothing
        End Function
        
        Private Sub OnUploadFileCompleted(ByVal state As Object)
            If (Not (Me.UploadFileCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent UploadFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub UploadFileAsync(ByVal fileName As String, ByVal data() As Byte)
            Me.UploadFileAsync(fileName, data, Nothing)
        End Sub
        
        Public Overloads Sub UploadFileAsync(ByVal fileName As String, ByVal data() As Byte, ByVal userState As Object)
            If (Me.onBeginUploadFileDelegate Is Nothing) Then
                Me.onBeginUploadFileDelegate = AddressOf Me.OnBeginUploadFile
            End If
            If (Me.onEndUploadFileDelegate Is Nothing) Then
                Me.onEndUploadFileDelegate = AddressOf Me.OnEndUploadFile
            End If
            If (Me.onUploadFileCompletedDelegate Is Nothing) Then
                Me.onUploadFileCompletedDelegate = AddressOf Me.OnUploadFileCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginUploadFileDelegate, New Object() {fileName, data}, Me.onEndUploadFileDelegate, Me.onUploadFileCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function
        
        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function
        
        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub
        
        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function
        
        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function
        
        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub
        
        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub
        
        Protected Overrides Function CreateChannel() As Services.FileService
            Return New FileServiceClientChannel(Me)
        End Function
        
        Private Class FileServiceClientChannel
            Inherits ChannelBase(Of Services.FileService)
            Implements Services.FileService
            
            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of Services.FileService))
                MyBase.New(client)
            End Sub
            
            Public Function BeginGetFileList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements Services.FileService.BeginGetFileList
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetFileList", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetFileList(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String) Implements Services.FileService.EndGetFileList
                Dim _args((0) - 1) As Object
                Dim _result As System.Collections.ObjectModel.ObservableCollection(Of String) = CType(MyBase.EndInvoke("GetFileList", _args, result),System.Collections.ObjectModel.ObservableCollection(Of String))
                Return _result
            End Function
            
            Public Function BeginDownloadFile(ByVal fileName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements Services.FileService.BeginDownloadFile
                Dim _args((1) - 1) As Object
                _args(0) = fileName
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("DownloadFile", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndDownloadFile(ByVal result As System.IAsyncResult) As Byte() Implements Services.FileService.EndDownloadFile
                Dim _args((0) - 1) As Object
                Dim _result() As Byte = CType(MyBase.EndInvoke("DownloadFile", _args, result),Byte())
                Return _result
            End Function
            
            Public Function BeginUploadFile(ByVal fileName As String, ByVal data() As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements Services.FileService.BeginUploadFile
                Dim _args((2) - 1) As Object
                _args(0) = fileName
                _args(1) = data
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("UploadFile", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Sub EndUploadFile(ByVal result As System.IAsyncResult) Implements Services.FileService.EndUploadFile
                Dim _args((0) - 1) As Object
                MyBase.EndInvoke("UploadFile", _args, result)
            End Sub
        End Class
    End Class
End Namespace
